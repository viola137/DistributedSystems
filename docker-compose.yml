version: "3.3"
services:
    backend:
        container_name: backend
        image: backend-app
        restart: on-failure
        build:
            context: ./backend/dsSystems
            dockerfile: Dockerfile
        ports:
            - "8080:8080"
        depends_on:
            - db
        environment:
            - DATABASE_USERNAME=postgres
            - DATABASE_PASSWORD=postgres
            - DATABASE_URL=jdbc:postgresql://localhost:5433/distributed_systems
        networks:
            - app-network
    db:
        container_name: dspgdb
        #image: postgres:15.3-alpine
        restart: on-failure
        image: "tiere_db"
        build:
            context: ./ddl
            dockerfile: Dockerfile
        environment:
            - POSTGRES_USERNAME=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=distributed_systems
            #- PG_DATA=/data/postgress-dbsystems
        volumes:
            - pgdata:/var/lib/postgresql/data
            #- ./ddl/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
        ports: 
            - "5433:5432"
        networks:
            - app-network
    #frontend:
      #  container_name: dsfrontend
     #   image: frontend
       # build:
        #    context: ./frontend
        #command: npm start
        #ports:
         #   - "4200:80"
        #depends_on:
         #   - backend       
         
volumes:
  pgdata:
  node_modules:
networks:
  app-network:
    driver: bridge
